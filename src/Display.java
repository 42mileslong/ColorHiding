import javax.swing.*;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;

/**
 * Printing
 */
public class Display extends JComponent {

    public static int[][] Image = {{255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255},
            {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255},
            {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255},
            {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255},
            {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255},
            {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 043, 043, 043, 043, 043, 043, 043, 043, 043, 043, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255},
            {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 043, 043, 043, 043, 043, 043, 043, 043, 043, 043, 043, 043, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255},
            {255, 255, 255, 255, 255, 255, 255, 255, 255, 043, 043, 043, 043, 043, 043, 043, 043, 043, 043, 043, 043, 043, 043, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255},
            {255, 255, 255, 255, 255, 255, 255, 255, 255, 043, 043, 043, 043, 043, 043, 043, 043, 043, 043, 043, 043, 043, 043, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255},
            {255, 255, 255, 255, 255, 255, 255, 255, 043, 043, 043, 043, 043, 043, 043, 043, 043, 043, 043, 043, 043, 043, 043, 043, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255},
            {255, 255, 255, 255, 255, 255, 255, 255, 043, 043, 043, 194, 043, 043, 043, 194, 194, 043, 043, 194, 043, 043, 043, 043, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255},
            {255, 255, 255, 255, 255, 255, 255, 255, 043, 043, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 043, 043, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255},
            {255, 255, 255, 255, 255, 255, 255, 255, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 043, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255},
            {255, 255, 255, 255, 255, 255, 255, 255, 000, 000, 000, 000, 000, 194, 194, 000, 000, 000, 000, 000, 194, 194, 194, 043, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255},
            {255, 255, 255, 255, 255, 255, 255, 255, 000, 255, 071, 255, 000, 000, 000, 000, 255, 071, 255, 000, 000, 000, 000, 000, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255},
            {255, 255, 255, 255, 255, 255, 255, 255, 000, 000, 000, 000, 000, 194, 194, 000, 000, 000, 000, 000, 194, 194, 194, 194, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255},
            {255, 255, 255, 255, 255, 255, 255, 255, 194, 194, 194, 194, 194, 155, 155, 194, 194, 194, 194, 194, 194, 194, 194, 194, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255},
            {255, 255, 255, 255, 255, 255, 255, 255, 194, 194, 194, 194, 194, 155, 194, 194, 194, 194, 194, 194, 194, 194, 194, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255},
            {255, 255, 255, 255, 255, 255, 255, 255, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255},
            {255, 255, 255, 255, 255, 255, 255, 255, 255, 194, 194, 194, 135, 135, 135, 135, 194, 194, 194, 194, 194, 194, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255},
            {255, 255, 255, 255, 255, 255, 255, 255, 255, 194, 194, 194, 194, 135, 135, 194, 194, 194, 194, 194, 194, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255},
            {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 194, 194, 194, 194, 194, 194, 194, 194, 194, 194, 172, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255},
            {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 194, 194, 194, 194, 194, 194, 194, 194, 194, 172, 172, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255},
            {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 194, 194, 194, 194, 194, 194, 172, 172, 172, 172, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255},
            {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 035, 035, 172, 172, 172, 172, 172, 172, 172, 172, 172, 035, 035, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255},
            {255, 255, 255, 255, 255, 255, 255, 255, 035, 035, 035, 035, 035, 172, 172, 172, 172, 172, 172, 172, 035, 035, 035, 035, 035, 255, 255, 255, 255, 255, 255, 255, 255, 255},
            {255, 255, 255, 255, 255, 255, 035, 035, 035, 035, 035, 035, 035, 035, 172, 172, 172, 172, 172, 035, 035, 035, 035, 035, 035, 035, 035, 255, 255, 255, 255, 255, 255, 255},
            {255, 255, 255, 255, 255, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 255, 255, 255, 255, 255, 255},
            {255, 255, 255, 255, 255, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 255, 255, 255, 255, 255},
            {255, 255, 255, 255, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 255, 255, 255, 255},
            {255, 255, 255, 255, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 255, 255, 255, 255},
            {255, 255, 255, 255, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 035, 255, 255, 255, 255},
            {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255},
            {255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255},
    };

    public static int[][] ImageA;
    public static int[][] ImageB;

    public Display() {
        setFocusable(true);
    }

    public void paint(Graphics g) {
        for (int r = 0; r < 10; r++) {
            for (int c = 0; c < 10; c++) {
                g.setColor(new Color(ImageA[r][c], ImageB[r][c], (int) (255*Math.random())));
                g.fillRect(c*3, r*3, 3, 3);
            }
        }
    }

    public static int[][] convertImage(String imageURL) {
        try {
            URL url = new URL(imageURL);
            Image image = Toolkit.getDefaultToolkit().createImage(url);

            BufferedImage i;

            if (image instanceof BufferedImage) {
                // Return image unchanged if it is already a BufferedImage.
                i = (BufferedImage) image;
            } else {
                // Ensure image is loaded.
                image = new ImageIcon(image).getImage();

                i = new BufferedImage(image.getWidth(null), image.getHeight(null), BufferedImage.TYPE_INT_ARGB);
                Graphics g = i.createGraphics();
                g.drawImage(image, 0, 0, null);
                g.dispose();
            }

            int w = i.getWidth();
            int h = i.getHeight();

            int[][] array = new int[w][h];

            System.out.println("hi");

            for (int j = 0; j < w; j++) {
                for (int k = 0; k < h; k++) {
                    array[j][k] = (i.getRGB(j, k) >> 16) & 0xFF;
                }
            }

            return array;
        } catch (MalformedURLException e) {
        } catch (IOException e) {}

        return null;
    }
}
